

// Program to read a string and copy it to another string using string copy function.
#include<stdio.h>
#include<string.h>

char copy_string(char a[], char b[]);

int main()
{
    char str1[100], str2[100];

    printf("enter the source string:\n");
    scanf("%s", str1);

    copy_string(str2, str1);
    return 0;

}

char copy_string(char a[], char b[])
{
    strcpy(a, b);

    printf("%s\n",a);

}

// Read a string and print its length.
#include<stdio.h>
#include<string.h>

int length_string(char a[]);

int main()
{
    char str1[100];

    printf("enter the string:\n");
    scanf("%s", str1);

    length_string(str1);
    return 0;

}

int  length_string(char a[])
{
    int len = strlen(a);
    printf("Length of the string is %d", len);

    return len;
}

// Read two string s1 and s2 and print the concatenated string s3.
#include<stdio.h>
#include<string.h>

char concate_string(char a[], char b[], char c[]);

int main()
{
    char s1[100], s2[100], s3[100];

    printf("enter the string's s1 and s2:\n");
    scanf("%s\n%s", s1, s2);

    concate_string(s1, s2, s3);
    return 0;

}

char concate_string(char a[], char b[], char c[])
{
    c = strcat(a, b);
    printf("%s", c);
}

// Prgram to check if the 2 given string are same.
#include<stdio.h>
#include<string.h>

char cmp_string(char a[], char b[]);

int main()
{
    char s1[100], s2[100];

    printf("enter the string's s1 and s2:\n");
    scanf("%s\n%s", s1, s2);

    cmp_string(s1, s2);

    return 0;

}

char cmp_string(char a[], char b[])
{
    char cmp = strcmp(a, b);
    if(cmp == 0)
        printf("two strings are same\n");
    else if(cmp > 0)
        printf("string 1 is greater than string 2");
    else
        printf("string 2 is greater than string 1");

}

// Program to convert string to its upper case.
#include<stdio.h>
#include<string.h>

char upr_string(char a[]);

int main()
{
    char s1[100];

    printf("enter the string s1:\n");
    scanf("%s", s1);

    upr_string(s1);

    return 0;

}

char upr_string(char a[])
{
    strupr(a);
    printf("%s", a);

}

// Program to replace a spaces of a string with a specific character.



// Program to read a string and print it in reverse order.
#include<stdio.h>

char reverse_string(char a[], int n);

int main()
{

    int size;
    printf("enter the size if string:\n");
    scanf("%d", &size);
    char str[size];
    printf("enter the string:\n");
    scanf("%s", str);

    reverse_string(str, size);

    return 0;

}

char reverse_string(char a[],int n)
{
    for(int i=n-1; i>=0; i--)
        printf("%c", a[i]);
}


// Read string and print the no. of times a given character appear.
#include<stdio.h>

char dupli_freq(char a[], int size);

int main()
{
    int size;
    printf("enter the size of the string:\n");
    scanf("%d", &size);

    char my_str[size];
    printf("enter the string:\n");
    scanf("%s", my_str);

    while(1)
    {
        dupli_freq(my_str, size);
    }


    return 0;
}

char dupli_freq(char a[], int size)
{
    int count = 0;

    char my_char;
    printf("enter the character:\n");
    scanf(" %c", &my_char);

    for(int i=0; i<size; i++)
    {
        if(my_char == a[i])
        {
            count++;
        }
    }
    printf("%c is repeated %d times\n", my_char, count);
}

// Program to search for substring.
#include<stdio.h>

char check_for_substring(char str[]);

int main()
{
    int size;
    printf("enter the size of the string:\n");
    scanf("%d", &size);

    char my_string[size];
    printf("enter the string:\n");
    scanf("%s", my_string);
    while(1)
    {
        check_for_substring(my_string);
    }


    return 0;
}

char check_for_substring(char str[])
{
    char sub_str[10];
    printf("enter the substring to be checked:\n");
    scanf("%s", sub_str);

    int flag = 0;

    for(int i = 0; str[i] != '\0'; i++)
    {
        flag = 0;
        for(int j = 0; sub_str[j] != '\0'; j++)
        {
            if(str[i+j] != sub_str[j])
            {
                flag = 0;
                break;
            }
            flag = 1;
        }

        if(flag)
            break;
    }

    if(flag)
        printf("Match Found!!\n");
    else
        printf("Match not Found!!\n");
}


// 













